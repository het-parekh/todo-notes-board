{"version":3,"sources":["redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreator.js","components/Header.js","components/Board.js","components/SelectBoard.js","components/Main.js","redux/PostsReducer.js","redux/BoardReducer.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["ADD_BOARD","ADD_POST","FETCH_BOARDS","UPDATE_BOARD","SWITCH_BOARD","FETCH_POSTS","DELETE_BOARD","DELETE_POST","UPDATE_POST","baseUrl","addNewBoard","dispatch","fetch","method","body","JSON","stringify","title","credentials","headers","then","response","json","type","ActionTypes","payload","catch","error","console","fetchAllBoards","boards","fetchBoards","deleteBoard","board_id","openedBoard","log","reposnse","deleteBoard_mini","updateBoard","board","value","split","data","addNewPost","date","Date","next_date","setDate","getDate","newPost","start_date","due_date","status","fetchAllPosts","posts","fetchPosts","deletePost","post_id","deletePost_mini","updatePost","post","Header","props","collapseNavbar","bind","isLoginOpen","isRegisterOpen","switchmodals","state","isNavCollapsed","this","setState","Modal","isOpen","toggle","id","onClick","className","size","style","cursor","for","name","required","href","Navbar","backgroundColor","expand","Container","NavbarToggler","textShadow","Collapse","navbar","Nav","NavItem","to","color","Component","Board","changeDate","changeStatus","e","UpdateInput","target","addPost","no_posts","length","map","Intl","DateTimeFormat","day","month","year","format","parse","bgcolor","col","key","marginBottom","Card","width","textAlign","onMouseEnter","marginTop","CardBody","CardTitle","Input","onChange","defaultValue","CardSubtitle","minDate","undefined","clearIcon","dayPlaceholder","monthPlaceholder","yearPlaceholder","CardText","overflow","CardLink","checked","offColor","Button","clickCount","SelectBoard","switchBoard","setTimeout","readonly_var","forEach","editable","board_title_class","not_editable","updateTitle","select_board","readOnly","onDoubleClick","onBlur","allowed_posts","filter","justifyContent","addBoard","outline","Main","basename","exact","path","component","withRouter","connect","Posts","action","concat","Boards","App","store","createStore","combineReducers","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d5956639.chunk.js","sourcesContent":["export const ADD_BOARD = 'ADD_BOARD'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const FETCH_BOARDS = 'FETCH_BOARDS'\r\nexport const UPDATE_BOARD = 'UPDATE_BOARD'\r\nexport const SWITCH_BOARD = 'SWITCH_BOARD'\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS'\r\nexport const DELETE_BOARD = 'DELETE_BOARD'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const UPDATE_POST = 'UPDATE_POST'\r\n\r\n","// export const baseUrl = 'http://localhost:3001/'\r\nexport const baseUrl='https://to-do-board-database.herokuapp.com/'\r\n","import * as ActionTypes from './ActionTypes'\r\nimport {baseUrl} from '../shared/baseUrl'\r\n/************************\r\nCreate New Board\r\n*************************/ \r\nexport const addBoard = (new_board) => ({\r\n    type:ActionTypes.ADD_BOARD,\r\n    payload:new_board\r\n})\r\n\r\nexport const addNewBoard = () => (dispatch) =>{\r\n\r\n    const newBoard = {\r\n        title:\"New Board\"\r\n    }\r\n    \r\n    return fetch(baseUrl+\"boards\",{\r\n        method:\"POST\",\r\n        body:JSON.stringify(newBoard),\r\n        credentials:'same-origin',\r\n        headers:{\r\n            // 'Access-Control-Allow-Origin': '*',\r\n            // 'Accept': 'application/json;odata.metadata=full',\r\n            'Content-Type': 'application/json',\r\n        }\r\n\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addBoard(response)))\r\n    .catch((error)=>{\r\n        console.error('Error',error)\r\n    })\r\n}\r\n\r\n/************************\r\nFetch Boards\r\n*************************/ \r\nexport const fetchBoards = (boards) => ({\r\n    type:ActionTypes.FETCH_BOARDS,\r\n    payload:boards\r\n})\r\n\r\nexport const fetchAllBoards = () =>(dispatch) => {\r\n    return fetch(baseUrl+\"boards\")\r\n    .then(response => response.json())\r\n    .then(boards => dispatch(fetchBoards(boards)))\r\n    .catch(error => console.error('Error',error))\r\n}\r\n/***********************\r\n Delete Board\r\n ***********************/\r\nexport const deleteBoard_mini = (board_id,openedBoard) =>({\r\n    type:ActionTypes.DELETE_BOARD,\r\n    payload:[board_id,openedBoard]  \r\n}) \r\n\r\nexport const deleteBoard = (board_id,openedBoard) => (dispatch) => {\r\n    console.log(openedBoard)\r\n    if (board_id == openedBoard){\r\n        openedBoard = 0\r\n    }\r\n    return fetch(baseUrl+'boards/'+board_id,{\r\n        method:\"DELETE\",\r\n        \r\n    })\r\n    .then(reposnse => reposnse.json())\r\n    .then(() => dispatch(deleteBoard_mini(board_id,openedBoard)))\r\n    .catch(error => console.error(\"Delete Error : \",error))\r\n}\r\n\r\n/***********************\r\n Update Board\r\n ***********************/\r\nexport const updateBoard_mini = (patched_board) => ({\r\n    type:ActionTypes.UPDATE_BOARD,\r\n    payload:patched_board\r\n})\r\nexport const updateBoard = (board,value) =>(dispatch) =>{\r\n    const body = board.split(\" \")[0]\r\n    return  fetch(baseUrl + 'boards/' + board.split(\" \")[1],{\r\n        method:\"PATCH\",\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n           [body]:value\r\n        })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => dispatch(updateBoard_mini(data)))\r\n    .catch(error => console.error(\"Update Error : \",error))\r\n}\r\n\r\n/***********************\r\n SWITCH Board\r\n ***********************/\r\nexport const switchBoard = (board_id) => ({\r\n    type:ActionTypes.SWITCH_BOARD,\r\n    payload:board_id\r\n})\r\n\r\n/************************\r\nCreate New Post\r\n*************************/ \r\nexport const addPost = (new_post) => ({\r\n    type:ActionTypes.ADD_POST,\r\n    payload:new_post\r\n})\r\n\r\nexport const addNewPost = (board_id) => (dispatch) =>{\r\n    var date = new Date()\r\n    var next_date = new Date()\r\n    next_date.setDate(date.getDate()+1)\r\n    const newPost = {\r\n        title:'',\r\n        body:'',\r\n        start_date:date,\r\n        due_date:next_date,\r\n        board:board_id,\r\n        status:false\r\n    }\r\n    \r\n    return fetch(baseUrl+\"posts\",{\r\n        method:\"POST\",\r\n        body:JSON.stringify(newPost,),\r\n        credentials:'same-origin',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addPost(response)))\r\n    .catch((error)=>{\r\n        console.error('Error',error)\r\n    })\r\n}\r\n\r\n/************************\r\nFetch Posts\r\n*************************/ \r\nexport const fetchPosts = (posts) => ({\r\n    type:ActionTypes.FETCH_POSTS,\r\n    payload:posts\r\n})\r\n\r\nexport const fetchAllPosts = () =>(dispatch) => {\r\n    return fetch(baseUrl+\"posts\")\r\n    .then(response => response.json())\r\n    .then(posts => dispatch(fetchPosts(posts)))\r\n    .catch(error => console.error('Error',error))\r\n}\r\n\r\n/***********************\r\n Delete Post\r\n ***********************/\r\nexport const deletePost_mini = (post_id) =>({\r\n    type:ActionTypes.DELETE_POST,\r\n    payload:post_id  \r\n}) \r\n\r\nexport const deletePost = (post_id) => (dispatch) => {\r\n    return fetch(baseUrl+'posts/'+post_id,{\r\n        method:\"DELETE\",\r\n        \r\n    })\r\n    .then(reposnse => reposnse.json())\r\n    .then(() => dispatch(deletePost_mini(post_id)))\r\n    .catch(error => console.error(\"Delete Error : \",error))\r\n}\r\n\r\n/***********************\r\n Update Post\r\n ***********************/\r\nexport const updatePost_mini = (patched_post) => ({\r\n    type:ActionTypes.UPDATE_POST,\r\n    payload:patched_post\r\n})\r\nexport const updatePost = (post,value) =>(dispatch) =>{\r\n    const body = post.split(\" \")[0]\r\n    return  fetch(baseUrl + 'posts/' + post.split(\" \")[1],{\r\n        method:\"PATCH\",\r\n        \r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n           [body]:value\r\n        })\r\n    })\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n        console.log(body)\r\n        if(body!==\"title\" && body!==\"body\"){\r\n            dispatch(updatePost_mini(data))\r\n        }})\r\n    .catch(error => console.error(\"Update Error : \",error))\r\n}\r\n\r\n\r\n","import React,{Component} from 'react'\r\nimport {Container,Navbar,Nav, NavbarToggler, Collapse, NavItem, Modal, } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaHome,FaClipboard,FaRegEdit,FaCloud,FaBars, FaSignInAlt, FaRegistered,\r\n        FaWindowClose,FaRegArrowAltCircleLeft}  from  'react-icons/fa'\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.collapseNavbar = this.collapseNavbar.bind(this)\r\n        this.isLoginOpen = this.isLoginOpen.bind(this)\r\n        this.isRegisterOpen = this.isRegisterOpen.bind(this)\r\n        this.switchmodals = this.switchmodals.bind(this)\r\n        this.state = {\r\n            isNavCollapsed:false,\r\n            isLoginOpen:false,\r\n            isRegisterOpen:false\r\n        }\r\n    }\r\n\r\n    collapseNavbar(){\r\n        this.setState({\r\n            isNavCollapsed:!this.state.isNavCollapsed\r\n        })\r\n    }\r\n\r\n    isLoginOpen(){\r\n        this.setState({\r\n            isLoginOpen:!this.state.isLoginOpen\r\n        })\r\n    }\r\n    isRegisterOpen(){\r\n        this.setState({\r\n            isRegisterOpen:!this.state.isRegisterOpen\r\n        })\r\n    }\r\n    \r\n    switchmodals(){\r\n        if (this.state.isLoginOpen == true){\r\n            this.isLoginOpen()\r\n            this.isRegisterOpen()  \r\n        }\r\n        else{\r\n            this.isRegisterOpen()  \r\n            this.isLoginOpen()\r\n        }\r\n    }   \r\n    render()\r\n    {\r\n        return(\r\n        <div >\r\n        {/* Login Modal Form */}\r\n        <Modal  isOpen={this.state.isLoginOpen} toggle={this.isLoginOpen}>\r\n           <div id=\"#modal_head\">\r\n           <button onClick={this.switchmodals} className=\"button_slide slide_left mt-3 ml-3 px-2 py-2\"><FaRegArrowAltCircleLeft size={28}/> Register </button>                \r\n           <div style={{cursor:\"pointer\"}} onClick={this.isLoginOpen} className=\"float-right mt-3 mr-3 py-0\"><FaWindowClose size ={28} /></div>\r\n            </div>\r\n            <div className=\"form\">\r\n            <div className=\"form-panel one\">\r\n                <div className=\"form-header\">\r\n                <h1>Account Login</h1>\r\n                </div>\r\n                <div className=\"form-content\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label className=\"form-remember\">\r\n                        <input type=\"checkbox\"/>Remember Me\r\n                    </label><a className=\"form-recovery\" href=\"#\">Forgot Password?</a>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <button type=\"submit\">Log In</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Modal>\r\n        {/* Register Modal Form */}\r\n        <Modal isOpen={this.state.isRegisterOpen}>\r\n        <div id=\"#modal_head\">\r\n           <button onClick={this.switchmodals} className=\"button_slide slide_left mt-3 ml-3 px-2 py-2\"><FaRegArrowAltCircleLeft size={28}/> Login </button>                \r\n           <div style={{cursor:\"pointer\"}} onClick={this.isRegisterOpen} className=\"float-right mt-3 mr-3 py-0\"><FaWindowClose size ={28} /></div>\r\n            </div>\r\n            <div className=\"form\">\r\n            <div className=\"form-toggle\"></div>\r\n            <div className=\"form-panel one\">\r\n                <div className=\"form-header\">\r\n                <h1>Register</h1>\r\n                </div>\r\n                <div className=\"form-content\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"username\">Email</label>\r\n                    <input type=\"text\" id=\"username\" name=\"username\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"password\">Confirm Password</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label for=\"password\">Phone Number</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" required=\"required\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <button type=\"submit\">Register</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Modal>\r\n\r\n        {/* Navbar */}\r\n        \r\n        <Navbar style={{backgroundColor:\"#fff\"}} className='py-0 px-0' expand='md'>\r\n        <div className=\"navbar-inner header w-100\" >\r\n            <Container >\r\n            <NavbarToggler onClick={this.collapseNavbar}><FaBars /></NavbarToggler>\r\n            <div className=\"brand\">\r\n                IN THE CLOUDS <FaCloud style={{textShadow: \"1px 1px white, -1px -1px #666\"}}/>\r\n            </div>\r\n            <Collapse isOpen = {this.state.isNavCollapsed}    navbar>\r\n                <Nav navbar className=\"ml-auto\">\r\n                <NavItem>\r\n                    <NavLink to=\"\" className=\"nav-link\"  >\r\n                    <FaHome /> Home\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink to='' className=\"nav-link\">\r\n                    <FaClipboard style={{color:\"black\"}}/>  MyBoard\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink to='' className=\"nav-link\">\r\n                     <FaRegEdit />   Edit Account\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink to=\"\"  onClick={this.isLoginOpen} className=\"nav-link\">\r\n                     <FaSignInAlt /> Login\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink  to=\"\" onClick={this.isRegisterOpen} style={{}} className=\"nav-link\">\r\n                     <FaRegistered />egister\r\n                    </NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n        \r\n            </Collapse>\r\n            </Container>\r\n\r\n        </div>\r\n        <br/>\r\n    </Navbar>\r\n    </div>\r\n    )}\r\n\r\n}\r\n\r\nexport default Header","import React,{Component} from 'react'\r\nimport {Card,CardBody,CardTitle,CardSubtitle,CardLink,CardText,Button,Input} from 'reactstrap'\r\nimport {  FaPlusSquare, FaTrashAlt } from 'react-icons/fa'\r\nimport DatePicker from 'react-date-picker'\r\nimport Switch from \"react-switch\";\r\n\r\nclass Board extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            date : {},\r\n        }\r\n    }\r\n    changeDate = (post_id,value) =>{\r\n        this.setState({\r\n            date:{...this.state.date,[post_id]:value}\r\n        })\r\n        this.props.updatePost(\"due_date \"+post_id,value)\r\n    }\r\n    changeStatus = (e,post_id) => {\r\n        this.props.updatePost(\"status \"+post_id,e)\r\n        // this.props.fetchPosts()\r\n    }\r\n    UpdateInput = (e) =>this.props.updatePost(e.target.name,e.target.value)\r\n    \r\n    deletePost = (post_id) => {this.props.deletePost(post_id)}\r\n    addPost = () =>{\r\n        this.props.addPost(this.props.board)\r\n    }\r\n    render(){\r\n        let no_posts = \"\"\r\n        if (this.props.posts.length===0 && this.props.board !== 0){\r\n            no_posts = <center><div onClick={this.addPost}><a className=\"addFirstButton addFirstButton-green\"><i className=\"fa fa-plus\"><FaPlusSquare style={{color:\"#fff\"}} size={24}/> </i>Add Your <strong>First Post</strong></a></div></center>\r\n        }\r\n        const posts = this.props.posts.map((post) => {\r\n            var start_date = new Intl.DateTimeFormat('en-GB', { day: '2-digit', month: 'numeric',year: 'numeric'}).format(Date.parse(post.start_date))\r\n            var due_date = new Date(Date.parse(post.due_date))\r\n            var status = \"PENDING\"\r\n            var bgcolor = \"#ffff4d\"\r\n            var col = \"#222\"\r\n            if (post.status == true){\r\n                status =  \"COMPLETED\"\r\n                bgcolor = \"#ccff66\"\r\n                col = \"#009999\"\r\n            }\r\n            else if(post.status == false && post.due_date < post.start_date){\r\n                status =  \"OVERDUE!!\"\r\n                bgcolor = \"#ff8080\"\r\n                col = \"#fff\"\r\n            }\r\n            return(\r\n            <div key={post.id} style={{marginBottom:\"30px\"}}   className='px-3 float-left' >\r\n                    <Card  style={{width: \"18rem\",backgroundColor:bgcolor}} >\r\n                        <div style={{textAlign:\"center\",color:col}}><b>STATUS : {status}</b><div className=\"float-right\"><FaPlusSquare onMouseEnter={this.props.fetchPosts} onClick={this.addPost} className=\"square\" size={26}/></div><hr style={{marginTop:\"0px\"}} /></div>\r\n                        <CardBody className=\"pt-0\">\r\n                            <CardTitle ><Input onChange = {this.UpdateInput}  name={'title '+ post.id} defaultValue={post.title}></Input></CardTitle>\r\n                            <CardSubtitle><small className=\"text-muted\"><span className=\"float-left\">Start: {start_date}</span>\r\n                                <span className='float-right mb-2'>\r\n                                    <DatePicker minDate={due_date} value={this.state.date[post.id]!==undefined?this.state.date[post.id]:due_date} \r\n                                    onChange={(value) => this.changeDate(post.id,value)} clearIcon={null} \r\n                                    dayPlaceholder='dd' monthPlaceholder='mm' yearPlaceholder='yyyy' format='dd/MM/y'></DatePicker>\r\n                                </span>\r\n                            </small>\r\n                            \r\n                            </CardSubtitle>\r\n                            <CardText><Input onChange = {this.UpdateInput}   type=\"textarea\" style={{overflow: 'scroll'}} name={'body '+ post.id}  defaultValue={post.body}></Input></CardText>\r\n                            <CardLink to=''>\r\n                            <label>\r\n                                <Switch  className=\"react-switch\" id={\"status \"+post.id} onChange={(e) => this.changeStatus(e,post.id)} checked={post.status} offColor=\"#dc3545\"/>\r\n                            </label>\r\n                            </CardLink>\r\n                            <CardLink className='float-right ' to=''><Button onMouseEnter={this.props.fetchPosts} onClick={() => this.deletePost(post.id)} color='danger'><FaTrashAlt /> Delete</Button></CardLink> \r\n                        </CardBody>\r\n                        </Card>\r\n            </div>\r\n            )\r\n        })\r\n        return(\r\n            \r\n            <div>\r\n            {no_posts}\r\n            {posts}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","\r\nimport React,{ Component } from 'react';\r\nimport {Navbar,Button} from 'reactstrap'\r\nimport Board from './Board';\r\nimport {FaPlusCircle} from \"react-icons/fa\"\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\r\n\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\n//Animation LEFT\r\nvar clickCount = 0;\r\nclass SelectBoard extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            readonly_var:true,\r\n            board_title_class:{},\r\n        }\r\n    }\r\n    switchBoard = (e) =>{\r\n\r\n        var board_id=e.target.name\r\n        clickCount++\r\n        setTimeout(() => {\r\n            if (clickCount === 1 && this.state.readonly_var===true){\r\n                this.props.switchBoard(board_id)\r\n            }\r\n        }, 300);\r\n    }\r\n    deleteBoard = (board_id,openedBoard) =>{\r\n        const posts = this.props.posts.posts\r\n        posts.forEach(post => {\r\n            if (post.board == board_id){\r\n                this.props.deletePost(post.id)\r\n            }\r\n        });\r\n        this.props.deleteBoard(board_id,openedBoard)\r\n    }\r\n\r\n    editable = (e) => {this.setState({readonly_var:false,board_title_class:{...this.state.board_title_class,[e.target.name]:\"\"}})}\r\n    not_editable = (e) => {\r\n        this.setState({readonly_var:true,board_title_class:{...this.state.board_title_class,[e.target.name]:\"uneditable_tab\"}})\r\n        this.updateTitle(e)\r\n    }\r\n    updateTitle = (e) => {this.props.updateBoard(\"title \"+e.target.name,e.target.value)}\r\n\r\n    render(){\r\n        clickCount = 0\r\n        \r\n        const select_board = this.props.boards.boards.map((board)=>{\r\n            return(\r\n                < >\r\n                    <button key={board.id+\" newboard\"} title={board.title} className={this.props.boards.openedBoard==board.id?'tabs tab-selected':'tabs'} name={board.id} onClick={this.switchBoard} >\r\n                        <input key={board.id+\" input\"} name={board.id} className={this.state.board_title_class[board.id]===undefined?'uneditable_tab':this.state.board_title_class[board.id]} required readOnly={this.state.readonly_var} \r\n                        onDoubleClick={this.editable} onBlur={this.not_editable} defaultValue ={board.title}></input>\r\n                    <AiOutlineCloseCircle key={board.id+\" close\"} onClick={() => this.deleteBoard(board.id,this.props.boards.openedBoard)} className=\"close_icon\"/>\r\n                    </button>\r\n                    \r\n                </>\r\n            )\r\n        })\r\n        const allowed_posts = this.props.posts.posts.filter(post => post.board == this.props.boards.openedBoard)\r\n        return(\r\n        <>\r\n       \r\n            <Navbar className='py-0 px-0' style={{marginBottom:\"20px\",justifyContent:\"flex-start\",backgroundColor:\"#ccffee\"}} >\r\n                <Button className=\"add-board\"  onClick={this.props.addBoard} outline color = 'info'><FaPlusCircle /> Add Board</Button>\r\n                {select_board}\r\n            </Navbar>\r\n            <div>\r\n                <Board \r\n                            board = {this.props.boards.openedBoard}\r\n                            posts = {allowed_posts}\r\n                            deletePost = {this.props.deletePost}\r\n                            updatePost = {this.props.updatePost}\r\n                            fetchPosts = {this.props.fetchPosts}\r\n                            addPost = {this.props.addPost}\r\n                />\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SelectBoard","import React,{ Component } from 'react'\r\nimport {Switch,Redirect,Route,withRouter,HashRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { switchBoard, deleteBoard,updateBoard,fetchAllBoards,addNewBoard,addNewPost,fetchAllPosts,deletePost,updatePost} from '../redux/ActionCreator'\r\nimport Header from './Header'\r\nimport SelectBoard from './SelectBoard'\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        posts : state.posts  ,\r\n        boards : state.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        addBoard    : () =>dispatch(addNewBoard()), \r\n        fetchBoards : () =>dispatch(fetchAllBoards()),\r\n        deleteBoard : (board_id,openedBoard) =>dispatch(deleteBoard(board_id,openedBoard)), \r\n        updateBoard : (board,value) =>dispatch(updateBoard(board,value)), \r\n        switchBoard : (board_id) =>dispatch(switchBoard(board_id)), \r\n        \r\n        addPost     : (board_id) =>dispatch(addNewPost(board_id)), \r\n        fetchPosts  : () =>dispatch(fetchAllPosts()),\r\n        deletePost  : (post_id) =>dispatch(deletePost(post_id)),\r\n        updatePost  : (post,value) =>dispatch(updatePost(post,value)),\r\n    })\r\n}\r\nclass Main extends Component{\r\n\r\n    componentDidMount(){    \r\n        this.props.fetchBoards()\r\n        this.props.fetchPosts()\r\n    }\r\n\r\n    render(){\r\n        const HomePage = () => {\r\n            return(\r\n                <SelectBoard\r\n                    posts = {this.props.posts}\r\n                    boards = {this.props.boards}\r\n                    deletePost = {this.props.deletePost}\r\n                    updatePost = {this.props.updatePost}\r\n                    fetchBoards = {this.props.fetchBoards}\r\n                    fetchPosts = {this.props.fetchPosts}\r\n                    addPost = {this.props.addPost}\r\n                    addBoard = {this.props.addBoard}\r\n                    deleteBoard = {this.props.deleteBoard}\r\n                    updateBoard = {this.props.updateBoard}\r\n                    switchBoard = {this.props.switchBoard}\r\n                />\r\n            )\r\n        }\r\n\r\n        return(\r\n            <HashRouter basename=\"/\">\r\n            <div >\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path = '/' component = {HomePage}/>\r\n                </Switch>\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main))\r\n\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Posts = (state = {posts:[]} , action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_POST:\r\n            return {...state,posts:state.posts.concat(action.payload)}\r\n        case ActionTypes.FETCH_POSTS:\r\n            return {...state ,posts:action.payload}\r\n        case ActionTypes.DELETE_POST:\r\n            return{...state , posts:state.posts.filter(post => post.id !== action.payload )}\r\n        case ActionTypes.UPDATE_POST:\r\n            return {...state, posts:state.posts.map((post,post_id)=>{\r\n                if(post.id === action.payload.id){\r\n                    return action.payload\r\n                }\r\n                return post\r\n            }) }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Boards = (state={boards:[],openedBoard:0},action) => {\r\n    switch(action.type){\r\n        case ActionTypes.FETCH_BOARDS:\r\n            return {...state,boards:action.payload}\r\n        case ActionTypes.ADD_BOARD:\r\n            return {...state,boards:state.boards.concat(action.payload),openedBoard:action.payload.id}\r\n        case ActionTypes.DELETE_BOARD:\r\n            return {...state,openedBoard:action.payload[1],boards:state.boards.filter(board => board.id !== action.payload[0])}\r\n        case ActionTypes.UPDATE_BOARD:\r\n            return {...state,openedBoard:action.payload.id,boards:state.boards.map((board,board_id)=>{\r\n                if(board.id === action.payload.id){\r\n                    return action.payload\r\n                }\r\n                return board\r\n            }) }\r\n        case ActionTypes.SWITCH_BOARD:\r\n            return{...state,openedBoard:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {Component} from 'react'\nimport Main from './components/Main'\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/ConfigureStore'\n\n\nclass App extends Component{\n  render(){\n    return(\n    <Provider store = {ConfigureStore()}>\n      <BrowserRouter>\n        <div className='App'><Main /></div>\n      </BrowserRouter>\n    </Provider>\n    )\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n// import logger from 'redux-logger'\r\nimport {Posts} from './PostsReducer'\r\nimport {Boards} from './BoardReducer'\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            posts:Posts,\r\n            boards:Boards,\r\n        }),\r\n        applyMiddleware(thunk)\r\n    )\r\n    return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}